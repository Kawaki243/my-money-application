spring.application.name=moneymanagerbackend

## MySQL Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/moneymanager
spring.datasource.username=root
spring.datasource.password=Dangcapmaimai123

## Set Server Context Path
server.servlet.context-path=/api/v1.0

## JPA Configuration

## The database schema will be updated automatically based on my entities.
spring.jpa.hibernate.ddl-auto=update
## Show SQL Query in the console
spring.jpa.show-sql=true
## Enable the formatting of SQL statements
spring.jpa.properties.hibernate.format_sql=true

## Configuration For sending Email to activate User's Account
# Mail server host (injected from environment variable)
spring.mail.host=${MAIL_HOST}

# Mail server port (commonly 587 for TLS or 465 for SSL)
spring.mail.port=${MAIL_PORT}

# SMTP username (injected from environment variable)
spring.mail.username=${MAIL_USERNAME}

# SMTP password (injected from environment variable, should be kept secret)
spring.mail.password=${MAIL_PASSWORD}

# Enable SMTP authentication
spring.mail.properties.mail.smtp.auth=true

# Enable STARTTLS (Transport Layer Security) for secure connection
spring.mail.properties.mail.smtp.starttls.enable=true

# Protocol to be used for sending emails
spring.mail.protocol=smtp

# Default "from" address for all outgoing emails
spring.mail.properties.mail.smtp.from=${MAIL_FROM}

## Generate a jwt secret
jwt.secret=4f9c8e7d3a1b6c2f9e5a7d0b3c8f4e2a9d7c6b4e8f2a1c3d9b7e5f4a2c6d8e0f

## Frontend URL
money.manager.frontend.url=${MY_MONEY_FRONTEND_URL} 

## Activate Prostgresql database
## spring.profiles.active=prod

## Link Backend
app.application.url=${MY_MONEY_BACKEND_URL}
